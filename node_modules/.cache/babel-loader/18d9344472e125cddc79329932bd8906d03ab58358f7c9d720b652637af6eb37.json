{"ast":null,"code":"var _jsxFileName = \"/Users/rajasekarrajendran/Diginer_React_Mongo/src/components/coursecontent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport 'reactjs-popup/dist/index.css';\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Coursecontent() {\n  _s();\n  const [form, setForm] = useState({\n    course_content: \"\"\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = {\n      ...form\n    };\n    await fetch(\"http://localhost:5050/record\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPerson)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      name: \"\",\n      position: \"\",\n      level: \"\",\n      created_by: \"\",\n      course_content: \"\"\n    });\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return /*#__PURE__*/_jsxDEV(Popup, {\n    trigger: /*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-link\",\n      to: `/coursecontent`,\n      children: \"Course content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this),\n    position: \"right center\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this) | /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Detailed course content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"coursecontent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: form.name,\n          onChange: e => updateForm({\n            coursecontent: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 4\n  }, this);\n}\n_s(Coursecontent, \"1VwsXmaWRDdpxshaw32Zp8jpPMI=\", false, function () {\n  return [useNavigate];\n});\n_c = Coursecontent;\nvar _c;\n$RefreshReg$(_c, \"Coursecontent\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Coursecontent","_s","form","setForm","course_content","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","name","position","level","created_by","Popup","trigger","Link","className","to","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","coursecontent","target","_c","$RefreshReg$"],"sources":["/Users/rajasekarrajendran/Diginer_React_Mongo/src/components/coursecontent.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport 'reactjs-popup/dist/index.css';\nimport { useNavigate } from \"react-router\";\n \nexport default function Coursecontent() {\n const [form, setForm] = useState({\n   course_content: \"\"\n });\n const navigate = useNavigate();\n \n // These methods will update the state properties.\n function updateForm(value) {\n   return setForm((prev) => {\n     return { ...prev, ...value };\n   });\n }\n \n // This function will handle the submission.\n async function onSubmit(e) {\n   e.preventDefault();\n \n   // When a post request is sent to the create url, we'll add a new record to the database.\n   const newPerson = { ...form };\n \n   await fetch(\"http://localhost:5050/record\", {\n     method: \"POST\",\n     headers: {\n       \"Content-Type\": \"application/json\",\n     },\n     body: JSON.stringify(newPerson),\n   })\n   .catch(error => {\n     window.alert(error);\n     return;\n   });\n \n   setForm({ name: \"\", position: \"\", level: \"\", created_by: \"\",course_content: \"\" });\n   navigate(\"/\");\n }\n \n // This following section will display the form that takes the input from the user.\n return (\n  <Popup trigger={<Link className=\"btn btn-link\" to={`/coursecontent`}>Course content</Link>} position = \"right center\"></Popup> |\n   <div>\n     <h3>Detailed course content</h3>\n     <form onSubmit={onSubmit}>\n       <div className=\"form-group\">\n         <label htmlFor=\"name\">coursecontent</label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"name\"\n           value={form.name}\n           onChange={(e) => updateForm({ coursecontent: e.target.value })}\n         />\n       </div>\n     </form>\n   </div>\n );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,8BAA8B;AACrC,SAASC,WAAW,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAC/BQ,cAAc,EAAE;EAClB,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;;EAE9B;EACA,SAASS,UAAUA,CAACC,KAAK,EAAE;IACzB,OAAOJ,OAAO,CAAEK,IAAI,IAAK;MACvB,OAAO;QAAE,GAAGA,IAAI;QAAE,GAAGD;MAAM,CAAC;IAC9B,CAAC,CAAC;EACJ;;EAEA;EACA,eAAeE,QAAQA,CAACC,CAAC,EAAE;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,SAAS,GAAG;MAAE,GAAGV;IAAK,CAAC;IAE7B,MAAMW,KAAK,CAAC,8BAA8B,EAAE;MAC1CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,SAAS;IAChC,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAI;MACdC,MAAM,CAACC,KAAK,CAACF,KAAK,CAAC;MACnB;IACF,CAAC,CAAC;IAEFjB,OAAO,CAAC;MAAEoB,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,UAAU,EAAE,EAAE;MAACtB,cAAc,EAAE;IAAG,CAAC,CAAC;IACjFC,QAAQ,CAAC,GAAG,CAAC;EACf;;EAEA;EACA,OACC,aAAAN,OAAA,CAAC4B,KAAK;IAACC,OAAO,eAAE7B,OAAA,CAAC8B,IAAI;MAACC,SAAS,EAAC,cAAc;MAACC,EAAE,EAAG,gBAAgB;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAE;IAACZ,QAAQ,EAAG;EAAc;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC,gBAC7HrC,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAAiC,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCrC,OAAA;MAAMU,QAAQ,EAAEA,QAAS;MAAAuB,QAAA,eACvBjC,OAAA;QAAK+B,SAAS,EAAC,YAAY;QAAAE,QAAA,gBACzBjC,OAAA;UAAOsC,OAAO,EAAC,MAAM;UAAAL,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3CrC,OAAA;UACEuC,IAAI,EAAC,MAAM;UACXR,SAAS,EAAC,cAAc;UACxBS,EAAE,EAAC,MAAM;UACThC,KAAK,EAAEL,IAAI,CAACqB,IAAK;UACjBiB,QAAQ,EAAG9B,CAAC,IAAKJ,UAAU,CAAC;YAAEmC,aAAa,EAAE/B,CAAC,CAACgC,MAAM,CAACnC;UAAM,CAAC;QAAE;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAET;AAACnC,EAAA,CAvDuBD,aAAa;EAAA,QAInBH,WAAW;AAAA;AAAA8C,EAAA,GAJL3C,aAAa;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}